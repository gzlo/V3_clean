#!/usr/bin/env bash

# Mock para comando tar
# Simula el comportamiento de tar para tests

# Variables de configuración del mock
MOCK_FAIL=${MOCK_TAR_FAIL:-0}
MOCK_DELAY=${MOCK_TAR_DELAY:-0}
MOCK_VERBOSE=${MOCK_TAR_VERBOSE:-0}

# Función para mostrar ayuda
show_help() {
    cat << EOF
mock tar - Simulación de tar para tests

Uso: tar [OPCIONES] [archivo] [archivos...]

Opciones principales:
  -c, --create          Crear archivo
  -x, --extract         Extraer archivos
  -t, --list           Listar contenido
  -f, --file=ARCHIVO    Usar archivo
  -z, --gzip           Filtrar a través de gzip
  -v, --verbose        Verbose
  -C DIR               Cambiar a directorio

Variables de entorno para controlar el mock:
  MOCK_TAR_FAIL=1      Simular fallo
  MOCK_TAR_DELAY=n     Delay en segundos
  MOCK_TAR_VERBOSE=1   Forzar output verbose
EOF
}

# Función principal
main() {
    local operation=""
    local archive_file=""
    local compress_type=""
    local verbose=0
    local change_dir=""
    local files=()
    
    # Parsear argumentos
    while [[ $# -gt 0 ]]; do
        case $1 in
            --help)
                show_help
                exit 0
                ;;
            -c|--create)
                operation="create"
                ;;
            -x|--extract)
                operation="extract"
                ;;
            -t|--list)
                operation="list"
                ;;
            -f|--file=*)
                if [[ "$1" == *"="* ]]; then
                    archive_file="${1#*=}"
                else
                    shift
                    archive_file="$1"
                fi
                ;;
            -z|--gzip)
                compress_type="gzip"
                ;;
            -v|--verbose)
                verbose=1
                ;;
            -C)
                shift
                change_dir="$1"
                ;;
            -*)
                # Combinación de opciones como -czf
                if [[ "$1" =~ c ]]; then operation="create"; fi
                if [[ "$1" =~ x ]]; then operation="extract"; fi
                if [[ "$1" =~ t ]]; then operation="list"; fi
                if [[ "$1" =~ z ]]; then compress_type="gzip"; fi
                if [[ "$1" =~ v ]]; then verbose=1; fi
                if [[ "$1" =~ f ]]; then
                    shift
                    archive_file="$1"
                fi
                ;;
            *)
                files+=("$1")
                ;;
        esac
        shift
    done
    
    # Activar verbose si está configurado en el mock
    if [[ $MOCK_VERBOSE -eq 1 ]]; then
        verbose=1
    fi
    
    # Simular delay
    if [[ $MOCK_DELAY -gt 0 ]]; then
        sleep "$MOCK_DELAY"
    fi
    
    # Simular fallo
    if [[ $MOCK_FAIL -eq 1 ]]; then
        echo "tar: Error fatal: No se puede crear el archivo" >&2
        exit 1
    fi
    
    # Cambiar directorio si se especificó
    if [[ -n "$change_dir" ]]; then
        if [[ $verbose -eq 1 ]]; then
            echo "tar: Cambiando al directorio '$change_dir'" >&2
        fi
        cd "$change_dir" || {
            echo "tar: Error: No se puede cambiar al directorio '$change_dir'" >&2
            exit 1
        }
    fi
    
    # Ejecutar operación
    case "$operation" in
        create)
            # Crear archivo simulado
            if [[ -n "$archive_file" ]]; then
                if [[ $verbose -eq 1 ]]; then
                    for file in "${files[@]}"; do
                        echo "$file" >&2
                    done
                fi
                
                # Crear archivo con contenido simulado
                {
                    echo "# Mock tar archive created on $(date)"
                    echo "# Files included:"
                    printf "# - %s\n" "${files[@]}"
                } > "$archive_file"
                
                echo "Mock tar: Archivo '$archive_file' creado con ${#files[@]} archivos" >&2
            fi
            ;;
        extract)
            if [[ -n "$archive_file" ]] && [[ -f "$archive_file" ]]; then
                if [[ $verbose -eq 1 ]]; then
                    echo "Extrayendo archivo simulado..." >&2
                    # Simular algunos archivos extraídos
                    echo "config.php" >&2
                    echo "version.php" >&2
                    echo "moodledata/" >&2
                fi
                echo "Mock tar: Archivo '$archive_file' extraído" >&2
            else
                echo "tar: Error: Archivo '$archive_file' no encontrado" >&2
                exit 1
            fi
            ;;
        list)
            if [[ -n "$archive_file" ]] && [[ -f "$archive_file" ]]; then
                # Simular listado de contenido
                echo "config.php"
                echo "version.php"
                echo "moodledata/"
                echo "lib/"
                echo "admin/"
            else
                echo "tar: Error: Archivo '$archive_file' no encontrado" >&2
                exit 1
            fi
            ;;
        *)
            echo "tar: Error: Operación no especificada" >&2
            exit 1
            ;;
    esac
    
    exit 0
}

# Ejecutar función principal
main "$@"
